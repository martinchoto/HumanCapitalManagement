@page "/personal"
@attribute [Authorize]
@if (employeeData == null)
{
	<div class="alert alert-warning text-center mt-5">
		Loading employee data...
	</div>
}
else
{
	<div class="container mt-5 text-center">
		<div class="row justify-content-center">
			<div class="col-md-8">
				<div class="card shadow">
					<div class="card-header bg-primary text-white">
						<h3 class="card-title mb-0">
							<i class="fas fa-user-circle me-2"></i>My Employee Profile
						</h3>
					</div>
					<div class="card-body">
						<div class="row">
							<div class="col-md-4 text-center mb-4">
								<div class="profile-avatar">
									<i class="fas fa-user-tie fa-5x text-secondary"></i>
								</div>
								<h5 class="mt-3">@employeeData.FullName</h5>
								<span class="badge bg-info">@employeeData.Department.Name</span>
								<span class="badge bg-primary">@employeeData.JobTitle</span>
							</div>

							<div class="col-md-8">
								<dl class="row">

									<dt class="col-sm-4">Email</dt>
									<dd class="col-sm-8">
										<a>@employeeData.Email</a>
									</dd>

									<dt class="col-sm-4">Salary</dt>
									<dd class="col-sm-8">@employeeData.Salary.ToString("f2") lv.</dd>

									<dt class="col-sm-4">Last Updated</dt>
									<dd class="col-sm-8">@DateTime.Now.ToString("MMMM dd, yyyy",
									System.Globalization.CultureInfo.InvariantCulture)</dd>
								</dl>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}
@code {
	private PersonalEmployeeDTO? employeeData;


	protected override async Task OnInitializedAsync()
	{
		var client = ClientFactory.CreateClient("ApiClient");
		employeeData = await client.GetFromJsonAsync<PersonalEmployeeDTO>("api/employee/me");
	}
}
