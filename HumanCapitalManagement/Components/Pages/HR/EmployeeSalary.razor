@page "/hr/employeesalary/{EmployeeId:int}"
@using HumanCapitalManagement.DTOs.HCMDTOs
@attribute [Authorize(Roles = "HR Admin")]
@rendermode InteractiveServer

<h3 class="text-center mb-4">Salary Records</h3>
<a class="btn btn-success d-flex justify-content-center" href="/hr/salary/add/@EmployeeId">Add</a>

@if (salaryRecords == null)
{
    <p><em>Loading...</em></p>
}
else if (salaryRecords.Count == 0)
{
    <p class="text-center">No salary records found.</p>
}
else
{
    <table class="table table-striped table-bordered text-center">
        <thead class="thead-dark">
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Amount</th>
                <th>Date Issued</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var record in salaryRecords)
            {
                <tr>
                    <td>@record.Name</td>
                    <td>@record.Description</td>
                    <td>@record.Amount.ToString("f2") lv</td>
                    <td>@record.DateIssued.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
	[Parameter]
	public int EmployeeId { get; set; }
	private List<SalaryRecordDTO>? salaryRecords;
	[SupplyParameterFromForm]
	private SalaryRecordDTO newRecord { get; set; } = new();
	private HttpClient client => ClientFactory.CreateClient("ApiClient");
	private bool isFormVisible = false;
	private string? message;

	protected override async Task OnInitializedAsync()
	{

		try
		{
			salaryRecords = await client.GetFromJsonAsync<List<SalaryRecordDTO>>($"api/hr/salaries/{EmployeeId}");
		}
		catch (Exception ex)
		{
			Console.Error.WriteLine($"Error loading salary records: {ex.Message}");
			salaryRecords = new List<SalaryRecordDTO>();
		}
	}
}
